### Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
typeset -gAH ZINIT;
ZINIT[OPTIMIZE_OUT_DISK_ACCESSES]=1
ZINIT[COMPINIT_OPTS]='-C'
source "${ZINIT_HOME}/zinit.zsh"
# Export PATH
export ZPFX="$HOME/.local"
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

export PATH

# Zinit
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

export FZF_DEFAULT_OPTS="
--layout=reverse
--info=inline
--height=40%
--preview-window=:hidden,right,50%
--multi
--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (exa -1 --color=always{})) || echo {} 2> /dev/null | head -200'
--color='hl:148,hl+:154,pointer:032,marker:010,bg+:237,gutter:008'
--prompt='❯ ' --pointer='➔' --marker='✓'
--bind 'ctrl-/:toggle-preview'
--bind 'ctrl-a:select-all'
--bind 'ctrl-e:execute(echo {+} | xargs -o vim)'
--bind 'ctrl-v:execute(code {+})'
"
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
setopt glob_dots
# fzf_tab opts

# key bind
zstyle ':fzf-tab:complete:*' fzf-bindings \
	'ctrl-v:execute-silent({_FTB_INIT_}code "$realpath")' \
	'ctrl-a:select-all'
zstyle ':completion:*' menu select

# systemctl preview
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle ':fzf-tab:complete:*' fzf-preview '([[ -f $realpath ]] && (bat --style=numbers --color=always $realpath || cat $realpath)) || ([[ -d $realpath ]] && (exa -1 --color=always $realpath)) || echo $realpath 2> /dev/null | head -200'
zstyle ':fzf-tab:*' ignore 4

# kill preview
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-preview \
  '[[ $group == "[process ID]" ]] && ps --pid=$word -o cmd --no-headers -w -w'
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-flags --preview-window=down:3:wrap

# history opt
HISTFILE="${ZDOTDIR:-$HOME}/.zsh_history"
HISTSIZE=10000
SAVEHIST=5000
setopt appendhistory 

setopt bang_hist                # Treat The '!' Character Specially During Expansion.
setopt inc_append_history       # Write To The History File Immediately, Not When The Shell Exits.
setopt share_history            # Share History Between All Sessions.
setopt hist_find_no_dups        # Do Not Display A Previously Found Event.
setopt hist_ignore_space        # Do Not Record An Event Starting With A Space.
setopt hist_save_no_dups        # Do Not Write A Duplicate Event To The History File.
setopt hist_verify              # Do Not Execute Immediately Upon History Expansion.
setopt extended_history         # Show Timestamp In History.

# Plugs
zinit light zdharma-continuum/zinit-annex-binary-symlink

zinit ice from"gh-r" \
  atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
  atpull"%atclone" src"init.zsh" \
  lbin'!starship'
zinit light starship/starship

zinit ice wait lucid depth"1"
zinit snippet OMZP::extract

zinit ice wait lucid depth"1"
zinit light agkozak/zsh-z

zinit ice wait lucid depth"1"
zinit snippet 'https://raw.githubusercontent.com/denisidoro/navi/master/shell/navi.plugin.zsh'

zinit light-mode wait lucid from'gh-r' lbin'!' nocompile for \
  @junegunn/fzf \
  @sharkdp/fd \
  lbin'!**/rg' @BurntSushi/ripgrep \
  atclone"./topgrade --gen-completion zsh > _topgrade" @topgrade-rs/topgrade \
  mv"completions/exa.zsh -> _exa" @ogham/exa \
  @denisidoro/navi \
  mv"bat*/autocomplete/bat.zsh -> _bat" @sharkdp/bat 

#zinit ice from'gh-r' lbin'!' nocompile \
#    atclone"./topgrade --gen-completion zsh > _topgrade"
#zinit light topgrade-rs/topgrade

zinit ice as"completion" id-as"chezmoi_completion" nocompile \
    has"chezmoi" \
    atclone"chezmoi completion zsh > _chezmoi" \
    pick"_chezmoi"
zinit light zdharma-continuum/null

zinit ice lucid wait depth'1' multisrc"shell/{completion,key-bindings}.zsh" \
    cp"*/completion.zsh -> _fzf" id-as"junegunn/fzf_completions" pick"/dev/null"
zinit light junegunn/fzf

ZSH_AUTOSUGGEST_USE_ASYNC=1
zinit wait lucid light-mode depth"1" for \
  blockf atpull"zinit creinstall -q ." \
      zsh-users/zsh-completions \
  atload"_zsh_autosuggest_start; ZSH_AUTOSUGGEST_STRATEGY=(history completion)" \
      zsh-users/zsh-autosuggestions

zicompinit; zpcdreplay

zinit light Aloxaf/fzf-tab




